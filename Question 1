# -*- coding: utf-8 -*-
"""
Created on Tue Feb  9 16:01:24 2021

@author: Felipe RÃ¶tger
"""
import numpy as np
import matplotlib.pyplot as plt

Xtest = np.loadtxt("Xtest.txt")
Xtrain = np.loadtxt("Xtrain.txt")
Ytrain = np.loadtxt("Ytrain.txt")

#%% i
#dont forget to load Xtest, Xtrain and Ytrain!!

print("Amount of training examples:",len(Xtest))
print("Amount of test examples:",len(Xtrain))

for i in range (0,10):  
    r = np.random.randint(len(Xtest)) #choosing one of one of 10 examples randomly
    A = np.reshape(Xtest[r],(28,28))    #rearrange the example in a 28x28 matrix, in order to create the image
    cl = (r,Ytrain[r])
    plt.matshow(A)  #creating image based on the example
    plt.title('Image No/Label: %d/%d' %cl)
    plt.show()
  
#%% ii
#self-explanatory, counting all negative & positive numbers and all zeros entries
def counter(A): 
    pos_count, neg_count, zero_count = 0, 0, 0
    m = len(A[0])
    n = len(A)
    for i in range(n): 
        for j in range(m):  
            if A[i][j] > 0: 
                pos_count += 1
            elif A[i][j] < 0: 
                 neg_count += 1
            else: 
                zero_count += 1                
    return pos_count, neg_count, zero_count,
x = counter(Xtest)
print("Amount of pos. numbers: ",x[0],"Amount of neg. numbers: ",x[1],"Amount of zeros: ",x[2])
#%% iii
b = Ytrain[:,np.newaxis]
x = counter(b)
print("Amount of pos. numbers: ",x[0],"Amount of neg. numbers: ",x[1],"Amount of zeros: ",x[2])
